name: Productos
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/products
    metadata:
      groupName: Productos
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Obtener productos publicados

        Este endpoint recupera todos los productos publicados ordenados por fecha de creación.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
             {
               "id": 1,
               "name": "Producto 1",
               "description": "Descripción del producto 1",
               "price": 1000,
               "status": "published",
               "created_at": "2023-01-01T00:00:00.000000Z",
               "updated_at": "2023-01-01T00:00:00.000000Z"
             }
           ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/products/{product_id}'
    metadata:
      groupName: Productos
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Obtener un producto

        Este endpoint recupera un producto específico por ID.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      product_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": {
             "id": 1,
             "name": "Producto 1",
             "description": "Descripción del producto 1",
             "price": 1000,
             "status": "published",
             "created_at": "2023-01-01T00:00:00.000000Z",
             "updated_at": "2023-01-01T00:00:00.000000Z"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/products/create
    metadata:
      groupName: Productos
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Crear un nuevo producto

        Este endpoint permite crear un nuevo producto.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'El nombre del producto. Ejemplo: "Producto 1"'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      price:
        name: price
        description: 'El precio del producto. Ejemplo: 10.00'
        required: true
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'La descripción del producto. Ejemplo: "Descripción del producto 1"'
        required: true
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      category_id:
        name: category_id
        description: 'The <code>id</code> of an existing record in the categories table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      shipment:
        name: shipment
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      img_path:
        name: img_path
        description: 'Las imágenes del producto.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      pending:
        name: pending
        description: 'Indica si el producto está pendiente de revisión. Ejemplo: false'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: architecto
      price: 4326.41688
      description: 'Eius et animi quos velit et.'
      category_id: architecto
      shipment: true
      pending: false
    fileParameters:
      img_path:
        - null
    responses:
      -
        status: 201
        content: |-
          {
           "message": "Producto creado correctamente",
           "product": {
             "id": 1,
             "name": "Producto 1",
             "description": "Descripción del producto 1",
             "price": 1000,
             "status": "published",
             "created_at": "2023-01-01T00:00:00.000000Z",
             "updated_at": "2023-01-01T00:00:00.000000Z"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/products/{product_id}/update'
    metadata:
      groupName: Productos
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Actualizar un producto

        Este endpoint permite actualizar un producto existente.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      product_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'El nombre del producto. Ejemplo: "Producto 1"'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      price:
        name: price
        description: 'El precio del producto. Ejemplo: 10.00'
        required: false
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'La descripción del producto. Ejemplo: "Descripción del producto 1"'
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      category_id:
        name: category_id
        description: 'The <code>id</code> of an existing record in the categories table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      shipment:
        name: shipment
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      img_path:
        name: img_path
        description: 'Las imágenes del producto.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: architecto
      price: 4326.41688
      description: 'Eius et animi quos velit et.'
      category_id: architecto
      shipment: false
    fileParameters:
      img_path:
        - null
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Producto actualizado correctamente",
           "product": {
             "id": 1,
             "name": "Producto 1",
             "description": "Descripción del producto 1",
             "price": 1000,
             "status": "published",
             "created_at": "2023-01-01T00:00:00.000000Z",
             "updated_at": "2023-01-01T00:00:00.000000Z"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/products/{product_id}/delete'
    metadata:
      groupName: Productos
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Eliminar un producto

        Este endpoint permite eliminar un producto existente.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      product_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Producto eliminado correctamente"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/products/{product_id}/post'
    metadata:
      groupName: Productos
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Publicar un producto

        Este endpoint permite cambiar el estado de un producto a publicado.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      product_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Producto publicado correctamente",
           "product": {
             "id": 1,
             "name": "Producto 1",
             "description": "Descripción del producto 1",
             "price": 1000,
             "status": "published",
             "created_at": "2023-01-01T00:00:00.000000Z",
             "updated_at": "2023-01-01T00:00:00.000000Z"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
