name: Categorías
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/categories/{category_id}'
    metadata:
      groupName: Categorías
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Obtener una categoría

        Este endpoint recupera una categoría específica por ID.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      category_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": {
             "id": 1,
             "name": "Categoría 1",
             "icon": "path/to/icon.png",
             "created_at": "2023-01-01T00:00:00.000000Z",
             "updated_at": "2023-01-01T00:00:00.000000Z"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/categories
    metadata:
      groupName: Categorías
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Obtener todas las categorías

        Este endpoint recupera todas las categorías registradas.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
             {
               "id": 1,
               "name": "Categoría 1",
               "icon": "path/to/icon.png",
               "created_at": "2023-01-01T00:00:00.000000Z",
               "updated_at": "2023-01-01T00:00:00.000000Z"
             }
           ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/categories/create
    metadata:
      groupName: Categorías
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Crear una nueva categoría

        Este endpoint permite crear una nueva categoría.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'El nombre de la categoría. Ejemplo: "Categoría 1"'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'El campo value no debe ser mayor que 50 caracteres.'
        required: false
        example: 'Et animi quos velit et fugiat.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      icon:
        name: icon
        description: 'El ícono de la categoría.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: architecto
      description: 'Et animi quos velit et fugiat.'
    fileParameters:
      icon: null
    responses:
      -
        status: 201
        content: |-
          {
           "message": "Categoría creada"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/categories/{category_id}/delete'
    metadata:
      groupName: Categorías
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Eliminar una categoría

        Este endpoint permite eliminar una categoría existente.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      category_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Categoría eliminada"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/categories/{id}/update'
    metadata:
      groupName: Categorías
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Actualizar una categoría

        Este endpoint permite actualizar una categoría existente.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'El nombre de la categoría. Ejemplo: "Categoría 1"'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'El campo value no debe ser mayor que 50 caracteres.'
        required: false
        example: 'Et animi quos velit et fugiat.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      icon:
        name: icon
        description: 'El ícono de la categoría.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: architecto
      description: 'Et animi quos velit et fugiat.'
    fileParameters:
      icon: null
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Categoría actualizada"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
